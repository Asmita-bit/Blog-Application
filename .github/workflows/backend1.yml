name: Build and Push Backend1 Image
# on:
#   push:
#     branches: [dev]
#     paths:
#       - 'code/backend1/**'
#       - 'code/backend2/**'
#   pull_request:
#     branches: [dev]
#     paths:
#       - 'code/backend1/**'
#       - 'code/backend2/**'

on:
  pull_request:
    branches: ["dev"]
  push:
    branches:
      - dev

env:
  REGISTRY: docker.io
  BACKEND1_IMAGE_NAME: asmita071/backend1

jobs:
  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' &&(github.head_ref == 'feature' || startsWith(github.head_ref, 'feature/*')) && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Commitlint
        run: npm install -D @commitlint/cli @commitlint/config-conventional
      - name: Add Commitlint Config
        run: |
          echo "module.exports = { extends: ['@commitlint/config-conventional'] };" > commitlint.config.js
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose
      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  lint_backend1:
    runs-on: ubuntu-latest
    needs: commitlint
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature/*') && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ./code/backend1/node_modules
          key: backend1-cache-${{ hashFiles('code/backend1/yarn.lock') }}
          restore-keys: backend1-cache-${{ hashFiles('code/backend1/yarn.lock') }}

      - name: Install Dependencies (Only if not cached)
        working-directory: ./code/backend2
        if: steps.cache.outputs.cache-hit != 'true'
        
        run: yarn install
      - name: Lint Backend1
        working-directory: ./code/backend1
        run: yarn lint


  build_push_backend1:
    name: Build & Push Backend1 Image
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature/*') && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCK_UNAME }}
          password: ${{ secrets.DOCK_TOKEN }}
          
      - name: Build & Push Backend1 Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend1
          file: ./code/backend1/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:$latest

